{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","currentPage","onPageChange","arrayOfPages","useMemo","pages","i","push","className","classNames","disabled","href","onClick","page","map","active","handlePageSelection","items","from","to","numbers","n","getNumbers","App","useState","perPage","setPerPage","setCurrentPage","numberOfPages","Math","ceil","firstItemIndex","lastItemIndex","min","visibleItems","slice","value","id","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"8MASaA,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAyBC,mBAAQ,WAGrC,IAFA,IAAMC,EAAQ,GAELC,EAAI,EAAGA,GAAKN,EAAOM,GAAK,EAC/BD,EAAME,KAAKD,GAGb,OAAOD,IACN,CAACL,IAoBJ,OACE,qBAAIQ,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBT,IAFd,SAKE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBV,EACfW,QAAS,WAxBjB,IAA4BC,EACb,KADaA,EAwBcZ,IAtBtCC,EAAaW,EAAO,IAiBlB,oBAUDV,EAAaW,KAAI,SAAAD,GAAI,OACpB,oBAEEL,UACEC,IACE,YACA,CAAEM,OAAQF,IAASZ,IALzB,SASE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBAjDnB,SAA6BC,GACvBA,IAASZ,GACXC,EAAaW,GA+CQG,CAAoBH,IAJrC,SAMGA,KAdEA,MAkBT,oBACEL,UAAWC,IACT,YACA,CAAEC,SAAUT,IAAgBD,IAHhC,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAAeV,IAAgBD,EAC/BY,QAAS,WAtDjB,IAAwBC,KAsDcZ,KArDvBD,GACXE,EAAaW,EAAO,IA+ClB,wBC9EFI,G,MCPC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQb,KAAKc,GAGf,OAAOD,EDAeE,CAAW,EAFb,IAGnBR,KAAI,SAAAO,GAAC,qBAAYA,OAEPE,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOvB,EAAP,KAAoB0B,EAApB,KACMC,EACFC,KAAKC,KATW,GASUL,GAExBM,GAAkB9B,EAAc,GAAKwB,EAErCO,EAAgBH,KAAKI,IAAKhC,EAAcwB,EAb1B,IAedS,EAAe9B,mBAAQ,WAC3B,OAAOa,EAAMkB,MAAMJ,EAAgBC,KAClC,CAACD,EAAgBC,IAOpB,OACE,sBAAKxB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiC8B,EAAiB,EADlD,cACyDC,EADzD,eA5BgB,GA4BhB,OAIA,sBAAKxB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE4B,MAAOX,EACP,UAAQ,kBACRY,GAAG,kBACH7B,UAAU,eACV8B,SApBV,SAAgCC,GAC9Bb,GAAYa,EAAMC,OAAOJ,OACzBT,EAAe,IAaT,UAOE,wBAAQS,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBjC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAO4B,EACP3B,YAAaA,EACbC,aAAcyB,IAGhB,6BACGO,EAAapB,KAAI,SAAA4B,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YE/DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d29575ad.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { useMemo } from 'react';\n\ntype Props = {\n  total: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  currentPage,\n  onPageChange,\n}) => {\n  const arrayOfPages: number[] = useMemo(() => {\n    const pages = [];\n\n    for (let i = 1; i <= total; i += 1) {\n      pages.push(i);\n    }\n\n    return pages;\n  }, [total]);\n\n  function handlePageSelection(page: number) {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  }\n\n  function handlePreviousPage(page: number) {\n    if (page !== 1) {\n      onPageChange(page - 1);\n    }\n  }\n\n  function handleNextPage(page: number) {\n    if (page !== total) {\n      onPageChange(page + 1);\n    }\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => handlePreviousPage(currentPage)}\n        >\n          «\n        </a>\n      </li>\n      {arrayOfPages.map(page => (\n        <li\n          key={page}\n          className={\n            classNames(\n              'page-item',\n              { active: page === currentPage },\n            )\n          }\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageSelection(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === total },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === total}\n          onClick={() => handleNextPage(currentPage)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState, useMemo, ChangeEvent } from 'react';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport './App.css';\n\nconst numberOfItems = 42;\n\nconst items: string[] = getNumbers(1, numberOfItems)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const numberOfPages\n    = Math.ceil(numberOfItems / perPage);\n\n  const firstItemIndex = (currentPage - 1) * perPage;\n\n  const lastItemIndex = Math.min((currentPage * perPage), numberOfItems);\n\n  const visibleItems = useMemo(() => {\n    return items.slice(firstItemIndex, lastItemIndex);\n  }, [firstItemIndex, lastItemIndex]);\n\n  function handlePerPageSelection(event: ChangeEvent<HTMLSelectElement>) {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemIndex + 1} - ${lastItemIndex} of ${numberOfItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={perPage}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handlePerPageSelection}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={numberOfPages}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}